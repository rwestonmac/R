import pandas as pd
pd.set_option('display.max_columns', None)
import plotly.express as px
import plotly.io as pio
pio.renderers.default='browser'

#import numpy as np
#import matplotlib.pyplot as plt
#import plotly.graph_objects as go
#import bokeh
#import json
#from io import StringIO
#import urllib.request


LGA_List =(r"C:\Users\WES98868\Downloads\Local_Authority_District_to_Country_(December_2022)_Lookup_in_the_United_Kingdom.csv")
LGA_List=pd.read_csv(LGA_List)

baseurl = 'https://www.nomisweb.co.uk/api/v01/dataset/NM_189_1'

#get list of LG
LG_get_21 =  baseurl + '.data.csv?geography=1811939329...1811939332,1811939334...1811939336,1811939338...1811939428,1811939436...1811939442,1811939768,1811939769,1811939443...1811939497,1811939499...1811939501,1811939503,1811939505...1811939507,1811939509...1811939517,1811939519,1811939520,1811939524...1811939570,1811939575...1811939599,1811939601...1811939628,1811939630...1811939634,1811939636...1811939647,1811939649,1811939655...1811939664,1811939667...1811939680,1811939682,1811939683,1811939685,1811939687...1811939704,1811939707,1811939708,1811939710,1811939712...1811939717,1811939719,1811939720,1811939722...1811939730&date=latest&industry=37748736&employment_status=1&measure=1&measures=20100'
LG_list_21=pd.read_csv(LG_get_21)

LG_Get_15 = baseurl + '.data.csv?geography=1811939329...1811939332,1811939334...1811939336,1811939338...1811939428,1811939436...1811939442,1811939768,1811939769,1811939443...1811939497,1811939499...1811939501,1811939503,1811939505...1811939507,1811939509...1811939517,1811939519,1811939520,1811939524...1811939570,1811939575...1811939599,1811939601...1811939628,1811939630...1811939634,1811939636...1811939647,1811939649,1811939655...1811939664,1811939667...1811939680,1811939682,1811939683,1811939685,1811939687...1811939704,1811939707,1811939708,1811939710,1811939712...1811939717,1811939719,1811939720,1811939722...1811939730&date=latestMINUS6&industry=37748736&employment_status=1&measure=1&measures=20100'
LG_list_15=pd.read_csv(LG_Get_15)

Enter_Name_Here = 'Dudley'

#filter LG list to select 
LG_filter=LG_list_21[["GEOGRAPHY","GEOGRAPHY_NAME"]]
LG_filter_A = LG_filter.query('GEOGRAPHY_NAME == @Enter_Name_Here')
LG_filter_B = LG_filter_A["GEOGRAPHY"]
A = str(LG_filter_B.values[0])
print (A)

#fetch Numer data from Nomis
Numer_url = baseurl +'.data.csv?geography='+ A + '&date=latest&industry=150994945...150994965&employment_status=1&measure=1&measures=20100'
Numer=pd.read_csv(Numer_url)
Numer_select = Numer[["INDUSTRY_NAME","GEOGRAPHY_NAME","OBS_VALUE"]]

#fetch 2015 data &date=latestMINUSX
Numer_url_15 = baseurl +'.data.csv?geography='+ A + '&date=latestMINUS6&industry=150994945...150994965&employment_status=1&measure=1&measures=20100'
Numer_15=pd.read_csv(Numer_url_15)
Numer_select_15 = Numer_15[["INDUSTRY_NAME","GEOGRAPHY_NAME","OBS_VALUE"]]

#Denom request, for; England|Wales|England & Wales
#Contry
#Denom_url = baseurl + '.data.csv?geography=2092957698...2092957701,2092957703&date=latest&industry=150994945...150994965&employment_status=1&measure=1&measures=20100'
#Combined Auth
Denom_url = baseurl + '.data.csv?geography=1853882369...1853882372,1853882374...1853882379&date=latest&industry=150994945...150994965&employment_status=1&measure=1&measures=20100'
Denom=pd.read_csv(Denom_url)
Denom_select = Denom[["INDUSTRY_NAME","GEOGRAPHY_NAME","OBS_VALUE"]]
#Set denom geography here == GEOGRAPHY_NAME
Denom_s = Denom_select[Denom_select["GEOGRAPHY_NAME"] == "West Midlands"]

#merge frames & cal Location Qoutient
LQA = pd.merge(Numer_select, Denom_s, on="INDUSTRY_NAME")
LQA = LQA[["INDUSTRY_NAME","OBS_VALUE_x","OBS_VALUE_y"]]
LQ_Sum_X = sum(LQA["OBS_VALUE_x"])
LQ_Sum_Y = sum(LQA["OBS_VALUE_y"])
LQA["OBS_VALUE_x_%"] = LQA["OBS_VALUE_x"]/LQ_Sum_X
LQA["OBS_VALUE_y_%"] = LQA["OBS_VALUE_y"]/LQ_Sum_Y
LQA['LQ'] = LQA["OBS_VALUE_x_%"]/LQA["OBS_VALUE_y_%"]

LQB = pd.merge(Numer_select, Numer_select_15, on="INDUSTRY_NAME")
LQB['Growth'] = (LQB["OBS_VALUE_y"]/LQB["OBS_VALUE_x"])**(1/6)-1
print(LQB)

LQB['Growth'] = LQB['Growth'].fillna('')
print(LQB)

LQA = pd.merge(LQA, LQB, on="INDUSTRY_NAME")
LQA = LQA[["INDUSTRY_NAME","OBS_VALUE_y_y","LQ","Growth"]]
print (LQA)
LQA['LQ'] = LQA['LQ'].fillna('')

LQ_fix = LQA.drop([1, 1])
print (LQ_fix)
LQ_fix = LQ_fix.drop([19,20])
print (LQ_fix)
LQA = LQ_fix 


#print and save html chart
fig1 = px.scatter(data_frame=LQA,x="LQ",y="Growth",size="OBS_VALUE_y_y",color="INDUSTRY_NAME",opacity = .5)
fig1.show()
fig1.write_html("DudleyWMW.html")


#Checks, _x should = 1|_y should = 1
print(sum(LQA["OBS_VALUE_x"]))
print(sum(LQA["OBS_VALUE_y"]))
print(sum(LQA['LQ']))
print(LQA)

LQA.to_csv("aaa.csv")


